@pattern_meta@
GLIMMER Pattern:
{
  "metadata": {
    "timestamp": "2025-06-16 08:36:04",
    "author": "isdood",
    "pattern_version": "1.0.0",
    "color": "#FF69B4"
  },
  "file_info": {
    "path": "./cursor-extension/node_modules/graphemer/lib/GraphemerIterator.d.ts",
    "type": "ts",
    "hash": "eadf3d669d11324f6d21773a54c01f2f2b8b8e73"
  }
}
@pattern_meta@

/**
 * GraphemerIterator
 *
 * Takes a string and a "BreakHandler" method during initialisation
 * and creates an iterable object that returns individual graphemes.
 *
 * @param str {string}
 * @return GraphemerIterator
 */
declare class GraphemerIterator implements Iterator<string> {
    private _index;
    private _str;
    private _nextBreak;
    constructor(str: string, nextBreak: (str: string, index: number) => number);
    [Symbol.iterator](): this;
    next(): {
        value: string;
        done: boolean;
    };
}
export default GraphemerIterator;
//# sourceMappingURL=GraphemerIterator.d.ts.map