@pattern_meta@
GLIMMER Pattern:
{
  "metadata": {
    "timestamp": "2025-06-16 08:36:04",
    "author": "isdood",
    "pattern_version": "1.0.0",
    "color": "#FF69B4"
  },
  "file_info": {
    "path": "./cursor-extension/node_modules/@typescript-eslint/scope-manager/dist/variable/ImplicitLibVariable.d.ts",
    "type": "ts",
    "hash": "c1dee3f5ef862026b69ea1c4b88b4112e79d54b1"
  }
}
@pattern_meta@

import type { Scope } from '../scope';
import { ESLintScopeVariable } from './ESLintScopeVariable';
import type { Variable } from './Variable';
interface ImplicitLibVariableOptions {
    readonly eslintImplicitGlobalSetting?: ESLintScopeVariable['eslintImplicitGlobalSetting'];
    readonly isTypeVariable?: boolean;
    readonly isValueVariable?: boolean;
    readonly writeable?: boolean;
}
/**
 * An variable implicitly defined by the TS Lib
 */
declare class ImplicitLibVariable extends ESLintScopeVariable implements Variable {
    /**
     * `true` if the variable is valid in a type context, false otherwise
     */
    readonly isTypeVariable: boolean;
    /**
     * `true` if the variable is valid in a value context, false otherwise
     */
    readonly isValueVariable: boolean;
    constructor(scope: Scope, name: string, { isTypeVariable, isValueVariable, writeable, eslintImplicitGlobalSetting, }: ImplicitLibVariableOptions);
}
export { ImplicitLibVariable, ImplicitLibVariableOptions };
//# sourceMappingURL=ImplicitLibVariable.d.ts.map