@pattern_meta@
GLIMMER Pattern:
{
  "metadata": {
    "timestamp": "2025-06-16 08:36:04",
    "author": "isdood",
    "pattern_version": "1.0.0",
    "color": "#FF69B4"
  },
  "file_info": {
    "path": "./cursor-extension/node_modules/@typescript-eslint/scope-manager/dist/referencer/VisitorBase.d.ts",
    "type": "ts",
    "hash": "02894a58ade285f8edbd804092252df907d6431d"
  }
}
@pattern_meta@

import type { TSESTree } from '@typescript-eslint/types';
import { VisitorKeys } from '@typescript-eslint/visitor-keys';
interface VisitorOptions {
    childVisitorKeys?: VisitorKeys | null;
    visitChildrenEvenIfSelectorExists?: boolean;
}
declare abstract class VisitorBase {
    #private;
    constructor(options: VisitorOptions);
    /**
     * Default method for visiting children.
     * @param node the node whose children should be visited
     * @param exclude a list of keys to not visit
     */
    visitChildren<T extends TSESTree.Node>(node: T | null | undefined, excludeArr?: (keyof T)[]): void;
    /**
     * Dispatching node.
     */
    visit(node: TSESTree.Node | null | undefined): void;
}
export { VisitorBase, VisitorOptions, VisitorKeys };
//# sourceMappingURL=VisitorBase.d.ts.map