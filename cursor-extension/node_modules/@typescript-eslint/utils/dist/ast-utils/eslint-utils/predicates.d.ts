@pattern_meta@
GLIMMER Pattern:
{
  "metadata": {
    "timestamp": "2025-06-16 08:36:04",
    "author": "isdood",
    "pattern_version": "1.0.0",
    "color": "#FF69B4"
  },
  "file_info": {
    "path": "./cursor-extension/node_modules/@typescript-eslint/utils/dist/ast-utils/eslint-utils/predicates.d.ts",
    "type": "ts",
    "hash": "4fc53f29a57e2a74b459ff47e138746af41ba6b3"
  }
}
@pattern_meta@

import type { TSESTree } from '../../ts-estree';
type IsSpecificTokenFunction<SpecificToken extends TSESTree.Token> = (token: TSESTree.Token) => token is SpecificToken;
type IsNotSpecificTokenFunction<SpecificToken extends TSESTree.Token> = (token: TSESTree.Token) => token is Exclude<TSESTree.Token, SpecificToken>;
type PunctuatorTokenWithValue<Value extends string> = TSESTree.PunctuatorToken & {
    value: Value;
};
type IsPunctuatorTokenWithValueFunction<Value extends string> = IsSpecificTokenFunction<PunctuatorTokenWithValue<Value>>;
type IsNotPunctuatorTokenWithValueFunction<Value extends string> = IsNotSpecificTokenFunction<PunctuatorTokenWithValue<Value>>;
declare const isArrowToken: IsPunctuatorTokenWithValueFunction<"=>">;
declare const isNotArrowToken: IsNotPunctuatorTokenWithValueFunction<"=>">;
declare const isClosingBraceToken: IsPunctuatorTokenWithValueFunction<"}">;
declare const isNotClosingBraceToken: IsNotPunctuatorTokenWithValueFunction<"}">;
declare const isClosingBracketToken: IsPunctuatorTokenWithValueFunction<"]">;
declare const isNotClosingBracketToken: IsNotPunctuatorTokenWithValueFunction<"]">;
declare const isClosingParenToken: IsPunctuatorTokenWithValueFunction<")">;
declare const isNotClosingParenToken: IsNotPunctuatorTokenWithValueFunction<")">;
declare const isColonToken: IsPunctuatorTokenWithValueFunction<":">;
declare const isNotColonToken: IsNotPunctuatorTokenWithValueFunction<":">;
declare const isCommaToken: IsPunctuatorTokenWithValueFunction<",">;
declare const isNotCommaToken: IsNotPunctuatorTokenWithValueFunction<",">;
declare const isCommentToken: IsSpecificTokenFunction<TSESTree.Comment>;
declare const isNotCommentToken: IsNotSpecificTokenFunction<TSESTree.Comment>;
declare const isOpeningBraceToken: IsPunctuatorTokenWithValueFunction<"{">;
declare const isNotOpeningBraceToken: IsNotPunctuatorTokenWithValueFunction<"{">;
declare const isOpeningBracketToken: IsPunctuatorTokenWithValueFunction<"[">;
declare const isNotOpeningBracketToken: IsNotPunctuatorTokenWithValueFunction<"[">;
declare const isOpeningParenToken: IsPunctuatorTokenWithValueFunction<"(">;
declare const isNotOpeningParenToken: IsNotPunctuatorTokenWithValueFunction<"(">;
declare const isSemicolonToken: IsPunctuatorTokenWithValueFunction<";">;
declare const isNotSemicolonToken: IsNotPunctuatorTokenWithValueFunction<";">;
export { isArrowToken, isClosingBraceToken, isClosingBracketToken, isClosingParenToken, isColonToken, isCommaToken, isCommentToken, isNotArrowToken, isNotClosingBraceToken, isNotClosingBracketToken, isNotClosingParenToken, isNotColonToken, isNotCommaToken, isNotCommentToken, isNotOpeningBraceToken, isNotOpeningBracketToken, isNotOpeningParenToken, isNotSemicolonToken, isOpeningBraceToken, isOpeningBracketToken, isOpeningParenToken, isSemicolonToken, };
//# sourceMappingURL=predicates.d.ts.map