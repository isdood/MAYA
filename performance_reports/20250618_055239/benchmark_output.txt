@pattern_meta@
GLIMMER Pattern:
{
  "metadata": {
    "timestamp": "2025-06-18 05:52:59",
    "author": "isdood",
    "pattern_version": "1.0.0",
    "color": "#FF69B4"
  },
  "file_info": {
    "path": "./performance_reports/20250618_055239/benchmark_output.txt",
    "type": "txt",
    "hash": "68bb628b4ab9d2f3c8dc99a923b152f8dd0f76b0"
  }
}
@pattern_meta@

   Compiling libc v0.2.174
   Compiling proc-macro2 v1.0.95
   Compiling cfg-if v1.0.1
   Compiling unicode-ident v1.0.18
   Compiling autocfg v1.4.0
   Compiling crossbeam-utils v0.8.21
   Compiling shlex v1.3.0
   Compiling serde v1.0.219
   Compiling smallvec v1.15.1
   Compiling memchr v2.7.5
   Compiling scopeguard v1.2.0
   Compiling futures-sink v0.3.31
   Compiling zerocopy v0.8.26
   Compiling futures-core v0.3.31
   Compiling zstd-safe v4.1.3+zstd.1.5.1
   Compiling futures-task v0.3.31
   Compiling slab v0.4.10
   Compiling parking_lot_core v0.8.6
   Compiling pin-project-lite v0.2.16
   Compiling parking_lot_core v0.9.11
   Compiling serde_json v1.0.140
   Compiling futures-io v0.3.31
   Compiling pin-utils v0.1.0
   Compiling either v1.15.0
   Compiling itoa v1.0.15
   Compiling getrandom v0.3.3
   Compiling ryu v1.0.20
   Compiling rayon-core v1.12.1
   Compiling byteorder v1.5.0
   Compiling regex-syntax v0.8.5
   Compiling ciborium-io v0.2.2
   Compiling hashbrown v0.12.3
   Compiling instant v0.1.13
   Compiling half v2.6.0
   Compiling os_str_bytes v6.6.1
   Compiling plotters-backend v0.3.7
   Compiling log v0.4.27
   Compiling thiserror v1.0.69
   Compiling anyhow v1.0.98
   Compiling futures-channel v0.3.31
   Compiling crc32fast v1.4.2
   Compiling bitflags v1.3.2
   Compiling once_cell v1.21.3
   Compiling iana-time-zone v0.1.63
   Compiling lazy_static v1.5.0
   Compiling yansi v1.0.1
   Compiling cast v0.3.0
   Compiling hashbrown v0.14.5
   Compiling textwrap v0.16.2
   Compiling same-file v1.0.6
   Compiling diff v0.1.13
   Compiling itertools v0.10.5
   Compiling oorandom v11.1.5
   Compiling anes v0.1.6
   Compiling fxhash v0.2.1
   Compiling clap_lex v0.2.4
   Compiling walkdir v2.5.0
   Compiling ciborium-ll v0.2.2
   Compiling plotters-svg v0.3.7
   Compiling lock_api v0.4.13
   Compiling num-traits v0.2.19
   Compiling indexmap v1.9.3
   Compiling pretty_assertions v1.4.1
   Compiling quote v1.0.40
   Compiling crossbeam-epoch v0.9.18
   Compiling syn v2.0.103
   Compiling getrandom v0.2.16
   Compiling fs2 v0.4.3
   Compiling atty v0.2.14
   Compiling crossbeam-deque v0.8.6
   Compiling jobserver v0.1.33
   Compiling rand_core v0.6.4
   Compiling parking_lot v0.11.2
   Compiling parking_lot v0.12.4
   Compiling dashmap v5.5.3
   Compiling clap v3.2.25
   Compiling cc v1.2.27
   Compiling plotters v0.3.7
   Compiling regex-automata v0.4.9
   Compiling rayon v1.10.0
   Compiling criterion-plot v0.5.0
   Compiling zstd-sys v1.6.2+zstd.1.5.1
   Compiling ppv-lite86 v0.2.21
   Compiling rand_chacha v0.3.1
   Compiling rand v0.8.5
   Compiling serde_derive v1.0.219
   Compiling futures-macro v0.3.31
   Compiling thiserror-impl v1.0.69
   Compiling serial_test_derive v2.0.0
   Compiling regex v1.11.1
   Compiling futures-util v0.3.31
   Compiling futures-executor v0.3.31
   Compiling futures v0.3.31
   Compiling serial_test v2.0.0
   Compiling chrono v0.4.41
   Compiling ciborium v0.2.2
   Compiling uuid v1.17.0
   Compiling tinytemplate v1.2.1
   Compiling criterion v0.4.0
   Compiling zstd v0.9.2+zstd.1.5.1
   Compiling sled v0.34.7
   Compiling maya_knowledge_graph v0.1.0 (/home/shimmer/MAYA/src/knowledge_graph)
error[E0432]: unresolved import `tempfile`
 --> benches/storage_benchmark.rs:6:5
  |
6 | use tempfile::tempdir;
  |     ^^^^^^^^ use of unresolved module or unlinked crate `tempfile`
  |
  = help: if you wanted to use a crate named `tempfile`, use `cargo add tempfile` to add it to your `Cargo.toml`

error[E0599]: no method named `commit` found for struct `storage::sled_store::SledWriteBatch` in the current scope
  --> benches/storage_benchmark.rs:51:23
   |
51 |                 batch.commit().unwrap();
   |                       ^^^^^^ method not found in `SledWriteBatch`
   |
  ::: /home/shimmer/MAYA/src/knowledge_graph/src/storage/mod.rs:60:8
   |
60 |     fn commit(self: Box<Self>) -> Result<()>;
   |        ------ the method is available for `Box<storage::sled_store::SledWriteBatch>` here
   |
help: consider wrapping the receiver expression with the appropriate type
   |
51 |                 Box::new(batch).commit().unwrap();
   |                 +++++++++     +

error[E0689]: can't call method `to_be_bytes` on ambiguous numeric type `{integer}`
  --> benches/storage_benchmark.rs:63:34
   |
61 |     for i in 0..1000 {
   |         - you must specify a type for this binding, like `i32`
62 |         let mut key = prefix.to_vec();
63 |         key.extend_from_slice(&i.to_be_bytes());
   |                                  ^^^^^^^^^^^

error[E0599]: no method named `commit` found for struct `storage::sled_store::SledWriteBatch` in the current scope
  --> benches/storage_benchmark.rs:67:11
   |
67 |     batch.commit().unwrap();
   |           ^^^^^^ method not found in `SledWriteBatch`
   |
  ::: /home/shimmer/MAYA/src/knowledge_graph/src/storage/mod.rs:60:8
   |
60 |     fn commit(self: Box<Self>) -> Result<()>;
   |        ------ the method is available for `Box<storage::sled_store::SledWriteBatch>` here
   |
help: consider wrapping the receiver expression with the appropriate type
   |
67 |     Box::new(batch).commit().unwrap();
   |     +++++++++     +

error[E0599]: no method named `commit` found for struct `storage::sled_store::SledWriteBatch` in the current scope
  --> benches/storage_benchmark.rs:84:11
   |
84 |     batch.commit()
   |           ^^^^^^ method not found in `SledWriteBatch`
   |
  ::: /home/shimmer/MAYA/src/knowledge_graph/src/storage/mod.rs:60:8
   |
60 |     fn commit(self: Box<Self>) -> Result<()>;
   |        ------ the method is available for `Box<storage::sled_store::SledWriteBatch>` here
   |
help: consider wrapping the receiver expression with the appropriate type
   |
84 |     Box::new(batch).commit()
   |     +++++++++     +

Some errors have detailed explanations: E0432, E0599, E0689.
For more information about an error, try `rustc --explain E0432`.
error: could not compile `maya_knowledge_graph` (bench "storage_benchmark") due to 5 previous errors
